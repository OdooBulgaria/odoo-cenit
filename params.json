{"name":"Cenit Integrations Client","tagline":"Integrate your Odoo with third party systems","body":"# Cenit Integrations Client\r\n\r\nCenit Integrations Client allows you to integrate your Odoo system with many\r\nthird party services available over the internet using the [Cenit.io](https://cenit.io)\r\nplatform as data integrator.\r\n\r\n## Overview\r\n\r\n+ The [Cenit.io](https://cenit.io) platform provides a set of models that allow you to map your\r\n  data once and send it transparently to any service supported by the platform.\r\n+ The [Cenit.io](https://cenit.io) platform is free and community friendly, and makes use of\r\n  open source and standards so that community driven development is easier.\r\n\r\n## Requirements\r\n\r\nThe Cenit Integrations Client requires a few additional Python packages to be\r\ninstalled on your system. These dependencies can be easily installed using\r\n**pip** as follows:\r\n\r\n    $ pip install inflect\r\n    $ pip install requests[security]\r\n\r\nIf not using **pip** you should manually install the following Python packages:\r\n+ `inflect`\r\n+ `pyOpenSSL`\r\n+ `ndg-httpsclient`\r\n+ `pyasn1`\r\n\r\nActual package names depend on your specific system.\r\n\r\n## Documentation\r\n\r\nThe Cenit Integrations Client groups its provided models in two categories\r\ndescribing *what* data you want to be able to send/receive and *when* you want\r\nto send/receive the data.\r\n\r\n### Data definitions\r\n\r\nThe models gathered here describe the *what*, they manipulate the Odoo data to\r\nshape it in a way that is consistent with supported third party services.\r\n\r\n#### Libraries\r\n\r\n*Libraries* are a mere logical organization of the data. They exist solely for\r\nthe purpose of organizing *Schemas* and *Data types*.\r\n\r\n##### Fields\r\n+ ``name``: string\r\n\r\n  The name of the *Library*.\r\n\r\n  Must be unique.\r\n\r\n+ ``slug``: string\r\n\r\n  A sanitized string containing only lower case alphanumeric characters and underscores.\r\n\r\n  It identifies the *Library* and must therefore be unique.\r\n\r\n#### Schemas\r\n\r\n*Schemas* are the fundamental stone of the `cenitsaas`_ platform models. They\r\ndefine the way data is stored and transmitted.\r\n\r\n##### Fields\r\n+ ``library``: reference\r\n\r\n  The *Library* to which the *Schema* belongs.\r\n\r\n+ ``name``: string\r\n\r\n  The name of the *Schema*.\r\n\r\n  Must be unique for each *Library*.\r\n\r\n+ ``slug``: string\r\n\r\n  A sanitized string containing only lowercase alphanumeric characters and underscores.\r\n\r\n  Must be unique for each *Library*.\r\n\r\n+ ``schema``: string\r\n\r\n  The actual JSON schema describing the data.\r\n\r\n### Data types\r\n\r\n*Data types* represent a mapping between an existing Odoo model and a *Schema*.\r\n\r\n#### Fields\r\n+ ``name``: string\r\n\r\n  The name of the *Data type*.\r\n\r\n+ ``model``: reference\r\n\r\n  The Odoo model that will by associated with the *Data type*.\r\n\r\n+ ``library``: reference\r\n\r\n  The *Library* to which the *Data type* belongs.\r\n\r\n+ ``schema``: reference\r\n\r\n  The *Schema* against which the ``model`` will be mapped.\r\n\r\n+ ``enabled``: boolean\r\n\r\n  If unchecked the *Data type* will be stored but won't trigger any event.\r\n  This is most useful when the mapping is intended to be used embedded from another *Data type*.\r\n\r\n+ ``mapping``: structure\r\n\r\n  Describes how to translate the ``model`` to the ``schema``.\r\n  It consists of a series of **mapping lines**, describing which ``model``\r\n  data should go into which ``schema`` property.\r\n\r\n  - ``name``: string\r\n\r\n    the name of the ``schema`` property that will store the value expressed in ``value``.\r\n\r\n  - ``value``: string\r\n\r\n    represents an actual value to use, depending on the ``type``.\r\n\r\n  - ``type``: one of\r\n\r\n    - ``Field``: tells the *Data type* that the value expressed in ``value`` is\r\n      the name of a field in the ``model`` (say **name**). This does not\r\n      allow using nested fields (that is: **rel_id.name** will cause breakdown).\r\n\r\n    - ``Model``: tells the *Data type* that the value expressed in ``value`` is\r\n      a reference to other *Data type*. This means that when sending/receiving\r\n      the data, the related Odoo model will also be serialized/deserialized\r\n      (according to the specified ``reference``) and fully processed as if it\r\n      were the one that triggered the action.\r\n\r\n    - ``Reference``: tells the *Data type* that the value expressed in\r\n      ``value`` is a reference to other model not mapped by any *Data type*. In\r\n      this case the field **name** of the related model is used as an identifier.\r\n\r\n    - ``Default``: tells the *Data type* that the value expressed in ``value``\r\n      should be treated as a string literal, which can contain replacement\r\n      patterns in the form of **{field_name}** where **field_name** is the\r\n      name of a field in the ``model``.\r\n\r\n      This form does allow the use of nested fields (e.g: **{rel_id.name}**),\r\n      and also can be a json structure, in which case the JSON brackets should\r\n      be doubled: **{{** and **}}** (e.g: **{{client: \"{client.name}\"}}**).\r\n\r\n    - ``Python code``: tells the *Data type* that the value expressed in ``value``\r\n      should be evaluated (it is actually processed by a call to Python's **eval**\r\n      builtin function). The special variable **obj** refers to the object being\r\n      mapped.\r\n\r\n  - ``reference``: reference\r\n\r\n    used when ``type`` is **Model**.\r\n\r\n    This refers to a *Data type* against which the ``value`` is mapped.\r\n\r\n  - ``cardinality``: one of\r\n\r\n    - ``2one``: the ``value`` represents a single object.\r\n\r\n    - ``2many``: the ``value`` represents a list of objects.\r\n\r\n    used when ``type`` is **Model** or **Reference**.\r\n\r\n  - ``primary``: if checked, the field will be used as an identifier when receiving data.\r\n\r\n+ ``triggers``: one of\r\n  - ``On creation``: every time an instance of ``model`` is created on Odoo, a serialization\r\n    to ``schema`` will be performed.\r\n\r\n  - ``On update``: every time an existing instance of ``model`` is modified in Odoo, a serialization\r\n    to ``schema`` will be performed.\r\n\r\n  - ``On creation or update``: every time instance of ``model`` is created or modified,\r\n    a serialization to ``schema`` will be performed.\r\n\r\n  - ``On interval``: every 10 minutes all instances of ``model`` will be serialized to ``schema``.\r\n\r\n  - ``Only manually``: serialization will only be performed when specifically requested to Odoo.\r\n\r\n+ ``Conditions``: structure\r\n\r\n  - ``field``: string\r\n\r\n    The name of a field in ``model``.\r\n\r\n  - ``condition``: one of\r\n\r\n    - ``Equal``: the value of ``field`` for the instance of ``model`` being serialized must be\r\n      equal to ``value``.\r\n\r\n    - ``Different``: the value of ``field`` for the instance of ``model`` being serialized must be\r\n      different than ``value``.\r\n\r\n    - ``In``: the value of ``field`` for the instance of ``model`` being serialized must be\r\n      present in ``value``.\r\n\r\n    - ``Not in``: the value of ``field`` for the instance of ``model`` being serialized must not be\r\n      present in ``value``.\r\n\r\n  - ``value``: string\r\n\r\n    If ``condition`` is one of ``In`` or ``Not in``, ``value`` will be splitted by **commas** to\r\n    form a list\r\n\r\n## Contribute\r\n\r\n+ Fork [the repository](https://github.com/openjaf/odoo-cenit) on Github.\r\n+ Create a branch off **8.0**\r\n+ Make your changes\r\n+ Write a test which shows that the bug was fixed or that the feature works as expected.\r\n+ Send a pull request.\r\n\r\n## License\r\n\r\n    Copyright (C) 2014-2015 by CenitSaas Team <support [at] cenit [dot] io>\r\n\r\n    All rights reserved.\r\n\r\n    Cenit Integrations Client is licensed under the LGPL license.  You can\r\n    redistribute and/or modify the Cenit Integrations Client according to the\r\n    terms of the license.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}